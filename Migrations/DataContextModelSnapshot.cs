// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TarefasApi.Data;

#nullable disable

namespace TarefasApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TarefasApi.Models.Tarefas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrição")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_TAREFAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descrição = "Lavar a louça antes da mãe chegar",
                            Nome = "Lavar a Louça",
                            Prioridade = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Descrição = "Estudar c# para proxima prova",
                            Nome = "Estudar para prova",
                            Prioridade = 1,
                            Status = 2
                        },
                        new
                        {
                            Id = 3,
                            Descrição = "Fazer o trabalho de fisica",
                            Nome = "Fazer trabalho escolar",
                            Prioridade = 3,
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            Descrição = "Ir a academia",
                            Nome = "Academia",
                            Prioridade = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Descrição = "Revisar conteudo passado na aula de DS",
                            Nome = "Revisar conteudo passado aula",
                            Prioridade = 3,
                            Status = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
